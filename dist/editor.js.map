{"version":3,"sources":["webpack://rrze-newsletter/./node_modules/classnames/index.js","webpack://rrze-newsletter/webpack/bootstrap","webpack://rrze-newsletter/webpack/runtime/compat get default export","webpack://rrze-newsletter/webpack/runtime/define property getters","webpack://rrze-newsletter/webpack/runtime/hasOwnProperty shorthand","webpack://rrze-newsletter/external [\"wp\",\"blocks\"]","webpack://rrze-newsletter/external [\"wp\",\"domReady\"]","webpack://rrze-newsletter/external [\"wp\",\"hooks\"]","webpack://rrze-newsletter/external [\"wp\",\"plugins\"]","webpack://rrze-newsletter/external \"lodash\"","webpack://rrze-newsletter/external [\"wp\",\"i18n\"]","webpack://rrze-newsletter/external [\"wp\",\"compose\"]","webpack://rrze-newsletter/external [\"wp\",\"data\"]","webpack://rrze-newsletter/./src/editor/blocks-validation/blocks-filters.js","webpack://rrze-newsletter/external [\"wp\",\"element\"]","webpack://rrze-newsletter/./src/editor/blocks-validation/nesting-detection.js","webpack://rrze-newsletter/external [\"wp\",\"editPost\"]","webpack://rrze-newsletter/external [\"wp\",\"components\"]","webpack://rrze-newsletter/./src/utils/consts.js","webpack://rrze-newsletter/./src/utils/index.js","webpack://rrze-newsletter/external [\"wp\",\"apiFetch\"]","webpack://rrze-newsletter/./src/utils/hooks.js","webpack://rrze-newsletter/external [\"wp\",\"keycodes\"]","webpack://rrze-newsletter/external [\"wp\",\"blockEditor\"]","webpack://rrze-newsletter/./src/components/newsletter-preview/index.js","webpack://rrze-newsletter/./src/components/init-modal/screens/layout-picker/SingleLayoutPreview.js","webpack://rrze-newsletter/./src/components/init-modal/screens/layout-picker/index.js","webpack://rrze-newsletter/./src/components/init-modal/index.js","webpack://rrze-newsletter/./src/newsletter-editor/layout/index.js","webpack://rrze-newsletter/./src/newsletter-editor/utils.js","webpack://rrze-newsletter/./src/service-providers/index.js","webpack://rrze-newsletter/./src/service-providers/generic/index.js","webpack://rrze-newsletter/./src/components/with-api-handler/index.js","webpack://rrze-newsletter/./src/newsletter-editor/sidebar/index.js","webpack://rrze-newsletter/./src/newsletter-editor/testing/index.js","webpack://rrze-newsletter/./src/components/select-control-with-optgroup/index.js","webpack://rrze-newsletter/./src/newsletter-editor/styling/index.js","webpack://rrze-newsletter/./src/newsletter-editor/public/index.js","webpack://rrze-newsletter/./src/components/send-button/index.js","webpack://rrze-newsletter/./src/newsletter-editor/editor/index.js","webpack://rrze-newsletter/./src/newsletter-editor/index.js","webpack://rrze-newsletter/./src/editor/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","wp","blocks","domReady","hooks","plugins","lodash","i18n","compose","data","isCenterAligned","block","attributes","verticalAlignment","getWarnings","props","warnings","getBlock","select","clientId","name","__nestedGroupWarning","__","innerBlocks","isAnyColumnCenterAligned","some","areAllColumnsCenterAligned","every","__nestedColumnWarning","align","handleSideAlignment","content","indexOf","dropCap","withUnsupportedFeaturesNotices","createHigherOrderComponent","BlockListBlock","className","map","warning","element","NestedColumnsDetection","withSelect","getBlocks","withDispatch","dispatch","updateBlock","id","replaceBlock","handleWarning","condition","warningKeyName","hasWarning","warnIfColumnHasColumns","hasColumns","forEach","warnIfIsGroupBlock","useEffect","editPost","components","LAYOUT_CPT_SLUG","isUserDefinedLayout","layout","post_type","apiFetch","useLayoutsState","useState","isFetching","setIsFetching","layouts","setLayouts","path","then","response","isFetchingLayouts","deleteLayoutPost","filter","ID","method","keycodes","blockEditor","meta","ELEMENT_ID","useMemo","Math","round","random","Fragment","rrze_newsletter_font_body","rrze_newsletter_font_header","style","backgroundColor","rrze_newsletter_background_color","BlockPreview","saveEntityRecord","saveLayout","payload","status","isEditable","deleteHandler","selectedLayoutId","setSelectedLayoutId","title","post_title","post_content","layoutName","setLayoutName","isSaving","setIsSaving","handleLayoutNameChange","blockPreviewBlocks","parse","classnames","onClick","onKeyDown","event","ENTER","keyCode","SPACE","preventDefault","role","tabIndex","aria-label","viewportWidth","TextControl","value","onChange","onBlur","disabled","Button","isDestructive","isLink","confirm","LAYOUTS_TABS","post_author","savePost","insertBlocks","replaceBlocks","setNewsletterMeta","insertLayout","layoutId","find","blocksToInsert","existingBlocksIds","metaPayload","rrze_newsletter_template_id","setTimeout","layoutPreviewProps","canRenderPreview","activeTabIndex","setActiveTabIndex","activeTab","displayedLayouts","Spinner","isSecondary","isPrimary","Modal","isDismissible","overlayClassName","shouldCloseOnClickOutside","shouldCloseOnEsc","getEditedPostAttribute","isEditedPostEmpty","getCurrentPostId","postTitle","postBlocks","currentPostId","stylingMeta","saveLayoutIdMeta","warningModalVisible","setWarningModalVisible","usedLayout","setUsedLayout","blockPreview","isSavingLayout","setIsSavingLayout","isManageModalVisible","setIsManageModalVisible","newLayoutName","setNewLayoutName","handleLayoutUpdate","updatedLayout","raw","postContent","serialize","isPostContentSameAsLayout","isEqual","isUsingCustomLayout","Boolean","updatePayload","onRequestClose","label","newLayout","clientIds","hasValidEmail","string","test","SERVICE_PROVIDERS","generic","validateNewsletter","messages","getFetchDataConfig","postId","ProviderSidebar","renderSubject","renderFrom","handleSenderUpdate","senderName","senderEmail","rrze_newsletter_from_name","rrze_newsletter_replyto","renderPreSendInfo","newsletterData","listName","OriginalComponent","inFlight","setInFlight","errors","setErrors","createSuccessNotice","createErrorNotice","removeNotice","getNotices","successNote","apiFetchWithErrorHandling","apiRequest","Promise","resolve","reject","message","notice","catch","error","code","setInFlightForAsync","withApiHandler","rrze_newsletter_from_email","replytoEmail","previewText","rrze_newsletter_preview_text","senderEmailClasses","rrze_newsletter_unverified_sender_domain","updateMetaValueInAPI","type","TextareaControl","updateMeta","testEmail","setTestEmail","sendTestEmail","params","test_email","help","SelectControlWithOptGroup","multiple","optgroups","hideLabelFromVision","instanceId","useInstanceId","isEmpty","BaseControl","newValues","target","options","selected","aria-describedby","optgroupIndex","optgroupLabel","option","optionIndex","fontOptgroups","customStylesSelector","fontBody","fontHeader","ApplyStyling","document","documentElement","setProperty","editorElement","querySelector","Styling","updateStyleValue","ColorPicker","color","onChangeComplete","hex","disableAlpha","PublicSettings","updateIsPublic","rrze_newsletter_is_public","ToggleControl","checked","forceIsDirty","getCurrentPost","getEditedPostVisibility","isEditedPostPublishable","isEditedPostSaveable","isSavingPost","isEditedPostBeingScheduled","isCurrentPostPublished","isPublishable","isSaveable","hasPublishAction","visibility","isPublished","publishStatus","newsletterValidationErrors","isButtonEnabled","modalVisible","setModalVisible","isBusy","Notice","Editor","getCurrentPostAttribute","isPublishingPost","isCleanNewPost","getActiveGeneralSidebarName","sentDate","isReady","activeSidebarName","isPublishingOrSavingPost","isPublic","lockPostAutosaving","lockPostSaving","unlockPostSaving","createNotice","publishEl","createElement","publishButton","getElementsByClassName","parentNode","insertBefore","colorPalette","JSON","stringify","dateTime","Date","toLocaleString","editorTitleEl","classList","createPortal","registerPlugin","render","NewsletterEditWithSelect","window","rrze_newsletter_data","is_service_provider_configured","shouldDisplaySettings","setShouldDisplaySettings","onSetupStatus","PluginDocumentSettingPanel","icon","addFilter","unregisterBlockStyle","settings","supports"],"mappings":"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","file":"editor.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var __WEBPACK_NAMESPACE_OBJECT__ = wp.blocks;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.domReady;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.hooks;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.plugins;","var __WEBPACK_NAMESPACE_OBJECT__ = lodash;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.i18n;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.compose;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.data;","/**\n * External dependencies\n */\nimport { every, some } from \"lodash\";\n\n/**\n * WordPress dependencies\n */\nimport { __ } from \"@wordpress/i18n\";\nimport { addFilter } from \"@wordpress/hooks\";\nimport { createHigherOrderComponent } from \"@wordpress/compose\";\nimport { select } from \"@wordpress/data\";\n\nconst handleSideAlignment = (warnings, props) => {\n    if (\n        props.attributes.align === \"left\" ||\n        props.attributes.align === \"right\"\n    ) {\n        warnings.push(__(\"Side alignment\", \"rrze-newsletter\"));\n    }\n    return warnings;\n};\n\nconst isCenterAligned = (block) =>\n    block.attributes.verticalAlignment === \"center\";\n\nconst getWarnings = (props) => {\n    let warnings = [];\n    const { getBlock } = select(\"core/block-editor\");\n    const block = getBlock(props.block.clientId);\n    switch (props.name) {\n        case \"core/group\":\n            if (props.attributes.__nestedGroupWarning) {\n                warnings.push(__(\"Nested group\", \"rrze-newsletter\"));\n            }\n            break;\n\n        // `vertical-align='middle'` will only work if all columns are middle-aligned.\n        // This is different in Gutenberg, because it uses flexbox layout (not available in email HTML).\n        //\n        // If a user chooses middle-alignment of a column, they will be prompted to\n        // middle-align all of the columns.\n        //\n        // Middle alignment option should be removed from the UI for a single column, when that's\n        // handled by the block editor filters.\n        case \"core/columns\":\n            if (block) {\n                const { innerBlocks } = block;\n                const isAnyColumnCenterAligned = some(\n                    innerBlocks,\n                    isCenterAligned\n                );\n                const areAllColumnsCenterAligned = every(\n                    innerBlocks,\n                    isCenterAligned\n                );\n                if (isAnyColumnCenterAligned && !areAllColumnsCenterAligned) {\n                    warnings.push(\n                        __(\n                            \"Unequal middle alignment. All or none of the columns should be middle-aligned.\",\n                            \"rrze-newsletter\"\n                        )\n                    );\n                }\n            }\n            break;\n\n        case \"core/column\":\n            if (props.attributes.__nestedColumnWarning) {\n                warnings.push(__(\"Nested columns\", \"rrze-newsletter\"));\n            }\n            break;\n\n        case \"core/image\":\n            warnings = handleSideAlignment(warnings, props);\n            if (props.attributes.align === \"full\") {\n                warnings.push(__(\"Full width\", \"rrze-newsletter\"));\n            }\n            break;\n\n        case \"core/paragraph\":\n            if (props.attributes.content.indexOf(\"<img\") >= 0) {\n                warnings.push(__(\"Inline image\", \"rrze-newsletter\"));\n            }\n            if (props.attributes.dropCap) {\n                warnings.push(__(\"Drop cap\", \"rrze-newsletter\"));\n            }\n            break;\n    }\n    return warnings;\n};\n\nconst withUnsupportedFeaturesNotices = createHigherOrderComponent(\n    (BlockListBlock) => {\n        return (props) => {\n            const warnings = getWarnings(props);\n            return warnings.length ? (\n                <div className=\"rrze-newsletter__editor-block\">\n                    <div className=\"rrze-newsletter__editor-block__warning components-notice is-error\">\n                        {__(\n                            \"These features will not be displayed correctly in an email, please remove them:\",\n                            \"rrze-newsletter\"\n                        )}\n                        {warnings.map((warning, i) => (\n                            <strong key={i}>\n                                <br />\n                                {warning}\n                            </strong>\n                        ))}\n                    </div>\n                    <BlockListBlock {...props} />\n                </div>\n            ) : (\n                <BlockListBlock {...props} />\n            );\n        };\n    },\n    \"withInspectorControl\"\n);\n\nexport const addBlocksValidationFilter = () => {\n    addFilter(\n        \"editor.BlockListBlock\",\n        \"rrze-newsletter/unsupported-features-notices\",\n        withUnsupportedFeaturesNotices\n    );\n};\n","var __WEBPACK_NAMESPACE_OBJECT__ = wp.element;","/**\n * External dependencies\n */\nimport { some } from \"lodash\";\n\n/**\n * WordPress dependencies\n */\nimport { withSelect, withDispatch } from \"@wordpress/data\";\nimport { compose } from \"@wordpress/compose\";\nimport { useEffect } from \"@wordpress/element\";\n\nconst NestedColumnsDetectionBase = ({ blocks, updateBlock }) => {\n    const handleWarning = (block, condition, warningKeyName) => {\n        const hasWarning = block.attributes[warningKeyName] === true;\n\n        if (condition && !hasWarning) {\n            updateBlock(block.clientId, {\n                ...block,\n                attributes: { ...block.attributes, [warningKeyName]: true },\n            });\n        } else if (!condition && hasWarning) {\n            updateBlock(block.clientId, {\n                ...block,\n                attributes: { ...block.attributes, [warningKeyName]: false },\n            });\n        }\n    };\n\n    const warnIfColumnHasColumns = (block) => {\n        if (block.name === \"core/column\") {\n            const hasColumns = some(\n                block.innerBlocks,\n                ({ name }) => name === \"core/columns\"\n            );\n            handleWarning(block, hasColumns, \"__nestedColumnWarning\");\n        }\n        block.innerBlocks.forEach(warnIfColumnHasColumns);\n    };\n\n    const warnIfIsGroupBlock = (block) => {\n        handleWarning(\n            block,\n            block.name === \"core/group\",\n            \"__nestedGroupWarning\"\n        );\n        block.innerBlocks.forEach(warnIfIsGroupBlock);\n    };\n\n    useEffect(() => {\n        blocks.forEach((block) => {\n            // A column cannot host columns.\n            block.innerBlocks.forEach(warnIfColumnHasColumns);\n            // Group can only be top-level.\n            block.innerBlocks.forEach(warnIfIsGroupBlock);\n        });\n    }, [blocks]);\n\n    return null;\n};\n\nexport const NestedColumnsDetection = compose([\n    withSelect((select) => {\n        const { getBlocks } = select(\"core/block-editor\");\n        return {\n            blocks: getBlocks(),\n        };\n    }),\n    withDispatch((dispatch) => {\n        return {\n            updateBlock: (id, block) => {\n                dispatch(\"core/block-editor\").replaceBlock(id, block);\n            },\n        };\n    }),\n])(NestedColumnsDetectionBase);\n","var __WEBPACK_NAMESPACE_OBJECT__ = wp.editPost;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.components;","export const LAYOUT_CPT_SLUG = \"newsletter_layout\";\nexport const NEWSLETTER_CPT_SLUG = \"newsletter\";\nexport const BLANK_LAYOUT_ID = 0;\n","/**\n * IntPluginernal dependencies\n */\nimport { LAYOUT_CPT_SLUG } from \"./consts\";\n\nexport const isUserDefinedLayout = (layout) =>\n    layout && layout.post_type === LAYOUT_CPT_SLUG;\n","var __WEBPACK_NAMESPACE_OBJECT__ = wp.apiFetch;","/**\n * WordPress dependencies\n */\nimport apiFetch from \"@wordpress/api-fetch\";\nimport { useState, useEffect } from \"@wordpress/element\";\n\n/**\n * Plugin dependencies\n */\nimport { LAYOUT_CPT_SLUG } from \"./consts\";\n\n/**\n * A React hook that provides the layouts list,\n * both default and user-defined.\n *\n * @return {Array} Array of layouts\n */\nexport const useLayoutsState = () => {\n    const [isFetching, setIsFetching] = useState(true);\n    const [layouts, setLayouts] = useState([]);\n\n    useEffect(() => {\n        apiFetch({\n            path: `/rrze-newsletter/v1/layouts`,\n        }).then((response) => {\n            setLayouts(response);\n            setIsFetching(false);\n        });\n    }, []);\n\n    const deleteLayoutPost = (id) => {\n        setLayouts(layouts.filter(({ ID }) => ID !== id));\n        apiFetch({\n            path: `/wp/v2/${LAYOUT_CPT_SLUG}/${id}`,\n            method: \"DELETE\",\n        });\n    };\n\n    return { layouts, isFetchingLayouts: isFetching, deleteLayoutPost };\n};\n","var __WEBPACK_NAMESPACE_OBJECT__ = wp.keycodes;","var __WEBPACK_NAMESPACE_OBJECT__ = wp.blockEditor;","/**\n * WordPress dependencies\n */\nimport { BlockPreview } from \"@wordpress/block-editor\";\nimport { Fragment, useMemo } from \"@wordpress/element\";\n\n/**\n * Plugin dependencies\n */\nimport \"./style.scss\";\n\nconst NewsletterPreview = ({ meta = {}, ...props }) => {\n    const ELEMENT_ID = useMemo(\n        () => `preview-${Math.round(Math.random() * 1000)}`,\n        []\n    );\n\n    return (\n        <Fragment>\n            <style>{`${\n                meta.rrze_newsletter_font_body\n                    ? `\n#${ELEMENT_ID} *:not( code ) {\n  font-family: ${meta.rrze_newsletter_font_body};\n}`\n                    : \" \"\n            }${\n                meta.rrze_newsletter_font_header\n                    ? `\n#${ELEMENT_ID} h1, #${ELEMENT_ID} h2, #${ELEMENT_ID} h3, #${ELEMENT_ID} h4, #${ELEMENT_ID} h5, #${ELEMENT_ID} h6 {\n  font-family: ${meta.rrze_newsletter_font_header};\n}`\n                    : \" \"\n            }`}</style>\n            <div\n                id={ELEMENT_ID}\n                className=\"rrze-newsletter__layout-preview\"\n                style={{\n                    backgroundColor: meta.rrze_newsletter_background_color,\n                }}\n            >\n                <BlockPreview {...props} />\n            </div>\n        </Fragment>\n    );\n};\n\nexport default NewsletterPreview;\n","/**\n * External dependencies\n */\nimport classnames from \"classnames\";\n\n/**\n * WordPress dependencies\n */\nimport { withDispatch } from \"@wordpress/data\";\nimport { parse } from \"@wordpress/blocks\";\nimport { useState, useMemo } from \"@wordpress/element\";\nimport { Button, TextControl } from \"@wordpress/components\";\nimport { ENTER, SPACE } from \"@wordpress/keycodes\";\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * Plugin dependencies\n */\nimport { LAYOUT_CPT_SLUG } from \"../../../../utils/consts\";\nimport NewsletterPreview from \"../../../newsletter-preview\";\n\nconst SingleLayoutPreview = ({\n  isEditable,\n  deleteHandler,\n  saveLayout,\n  selectedLayoutId,\n  setSelectedLayoutId,\n  ID,\n  post_title: title,\n  post_content: content,\n  meta,\n}) => {\n  const handleDelete = () => {\n    // eslint-disable-next-line no-alert\n    if (\n      confirm(\n        __(\"Are you sure you want to delete this layout?\", \"rrze-newsletter\")\n      )\n    ) {\n      deleteHandler(ID);\n    }\n  };\n\n  const [layoutName, setLayoutName] = useState(title);\n  const [isSaving, setIsSaving] = useState(false);\n\n  const handleLayoutNameChange = () => {\n    if (layoutName !== title) {\n      setIsSaving(true);\n      saveLayout({ title: layoutName }).then(() => {\n        setIsSaving(false);\n      });\n    }\n  };\n\n  const setPreviewBlocks = (blocks) =>\n    blocks.map((block) => {\n      //@todo\n      return block;\n    });\n\n  const blockPreviewBlocks = useMemo(() => setPreviewBlocks(parse(content)), [\n    content,\n  ]);\n\n  return (\n    <div\n      key={ID}\n      className={classnames(\"rrze-newsletter-layouts__item\", {\n        \"is-active\": selectedLayoutId === ID,\n      })}\n    >\n      <div\n        className=\"rrze-newsletter-layouts__item-preview\"\n        onClick={() => setSelectedLayoutId(ID)}\n        onKeyDown={(event) => {\n          if (ENTER === event.keyCode || SPACE === event.keyCode) {\n            event.preventDefault();\n            setSelectedLayoutId(ID);\n          }\n        }}\n        role=\"button\"\n        tabIndex=\"0\"\n        aria-label={title}\n      >\n        {\"\" === content ? null : (\n          <NewsletterPreview\n            meta={meta}\n            blocks={blockPreviewBlocks}\n            viewportWidth={600}\n          />\n        )}\n      </div>\n      {isEditable ? (\n        <TextControl\n          className=\"rrze-newsletter-layouts__item-label\"\n          value={layoutName}\n          onChange={setLayoutName}\n          onBlur={handleLayoutNameChange}\n          disabled={isSaving}\n          onKeyDown={(event) => {\n            if (ENTER === event.keyCode) {\n              handleLayoutNameChange();\n            }\n          }}\n        />\n      ) : (\n        <div className=\"rrze-newsletter-layouts__item-label\">{title}</div>\n      )}\n      {isEditable && (\n        <Button isDestructive isLink onClick={handleDelete} disabled={isSaving}>\n          {__(\"Delete\", \"rrze-newsletter\")}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default withDispatch((dispatch, { ID }) => {\n  const { saveEntityRecord } = dispatch(\"core\");\n  return {\n    saveLayout: (payload) =>\n      saveEntityRecord(\"postType\", LAYOUT_CPT_SLUG, {\n        status: \"publish\",\n        id: ID,\n        ...payload,\n      }),\n  };\n})(SingleLayoutPreview);\n","/**\n * External dependencies\n */\nimport classnames from \"classnames\";\nimport { find } from \"lodash\";\n\n/**\n * WordPress dependencies\n */\nimport { parse } from \"@wordpress/blocks\";\nimport { Fragment, useMemo, useState, useEffect } from \"@wordpress/element\";\nimport { compose } from \"@wordpress/compose\";\nimport { withSelect, withDispatch } from \"@wordpress/data\";\nimport { Button, Spinner } from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * Plugin dependencies\n */\nimport { BLANK_LAYOUT_ID } from \"../../../../utils/consts\";\nimport { isUserDefinedLayout } from \"../../../../utils\";\nimport { useLayoutsState } from \"../../../../utils/hooks\";\nimport SingleLayoutPreview from \"./SingleLayoutPreview\";\nimport NewsletterPreview from \"../../../newsletter-preview\";\n\nconst LAYOUTS_TABS = [\n  {\n    title: __(\"Prebuilt\", \"rrze-newsletter\"),\n    filter: (layout) => layout.post_author === undefined,\n  },\n  {\n    title: __(\"Saved\", \"rrze-newsletter\"),\n    filter: isUserDefinedLayout,\n    isEditable: true,\n  },\n];\n\nconst LayoutPicker = ({\n  getBlocks,\n  insertBlocks,\n  replaceBlocks,\n  savePost,\n  setNewsletterMeta,\n}) => {\n  const { layouts, isFetchingLayouts, deleteLayoutPost } = useLayoutsState();\n\n  const insertLayout = (layoutId) => {\n    const { post_content: content, meta = {} } =\n      find(layouts, { ID: layoutId }) || {};\n    const blocksToInsert = content ? parse(content) : [];\n    const existingBlocksIds = getBlocks().map(({ clientId }) => clientId);\n    if (existingBlocksIds.length) {\n      replaceBlocks(existingBlocksIds, blocksToInsert);\n    } else {\n      insertBlocks(blocksToInsert);\n    }\n    const metaPayload = {\n      rrze_newsletter_template_id: layoutId,\n      ...meta,\n    };\n    setNewsletterMeta(metaPayload);\n    setTimeout(savePost, 1);\n  };\n\n  const [selectedLayoutId, setSelectedLayoutId] = useState(null);\n  const layoutPreviewProps = useMemo(() => {\n    const layout = selectedLayoutId && find(layouts, { ID: selectedLayoutId });\n    return layout\n      ? { blocks: parse(layout.post_content), meta: layout.meta }\n      : null;\n  }, [selectedLayoutId, layouts.length]);\n\n  const canRenderPreview =\n    layoutPreviewProps && layoutPreviewProps.blocks.length > 0;\n\n  const renderPreview = () =>\n    canRenderPreview ? (\n      <NewsletterPreview {...layoutPreviewProps} viewportWidth={600} />\n    ) : (\n      <p>{__(\"Select a layout to preview.\", \"rrze-newsletter\")}</p>\n    );\n\n  const [activeTabIndex, setActiveTabIndex] = useState(0);\n  const activeTab = LAYOUTS_TABS[activeTabIndex];\n  const displayedLayouts = layouts.filter(activeTab.filter);\n\n  // Switch tab to user layouts if there are any.\n  useEffect(() => {\n    if (layouts.filter(isUserDefinedLayout).length) {\n      setActiveTabIndex(1);\n    }\n  }, [layouts.length]);\n\n  return (\n    <Fragment>\n      <div className=\"rrze-newsletter-modal__content\">\n        <div className=\"rrze-newsletter-tabs rrze-newsletter-buttons-group\">\n          {LAYOUTS_TABS.map(({ title }, i) => (\n            <Button\n              key={i}\n              disabled={isFetchingLayouts}\n              className={classnames(\"rrze-newsletter-tabs__button\", {\n                \"rrze-newsletter-tabs__button--is-active\":\n                  !isFetchingLayouts && i === activeTabIndex,\n              })}\n              onClick={() => setActiveTabIndex(i)}\n            >\n              {title}\n            </Button>\n          ))}\n        </div>\n        <div\n          className={classnames(\"rrze-newsletter-modal__layouts\", {\n            \"rrze-newsletter-modal__layouts--loading\": isFetchingLayouts,\n          })}\n        >\n          {isFetchingLayouts ? (\n            <Spinner />\n          ) : (\n            <div\n              className={classnames({\n                \"rrze-newsletter-layouts\": displayedLayouts.length > 0,\n              })}\n            >\n              {displayedLayouts.length ? (\n                displayedLayouts.map((layout) => (\n                  <SingleLayoutPreview\n                    key={layout.ID}\n                    selectedLayoutId={selectedLayoutId}\n                    setSelectedLayoutId={setSelectedLayoutId}\n                    deleteHandler={deleteLayoutPost}\n                    isEditable={activeTab.isEditable}\n                    {...layout}\n                  />\n                ))\n              ) : (\n                <span>\n                  {__(\n                    'Turn any newsletter to a layout via the \"Layout\" sidebar menu in the editor.',\n                    \"rrze-newsletter\"\n                  )}\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n\n        <div className=\"rrze-newsletter-modal__preview\">\n          {!isFetchingLayouts && renderPreview()}\n        </div>\n      </div>\n      <div className=\"rrze-newsletter-modal__action-buttons\">\n        <Button isSecondary onClick={() => insertLayout(BLANK_LAYOUT_ID)}>\n          {__(\"Start With A Blank Layout\", \"rrze-newsletter\")}\n        </Button>\n        <span className=\"separator\"> </span>\n        <Button\n          isPrimary\n          disabled={isFetchingLayouts || !canRenderPreview}\n          onClick={() => insertLayout(selectedLayoutId)}\n        >\n          {__(\"Use Selected Layout\", \"rrze-newsletter\")}\n        </Button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default compose([\n  withSelect((select) => {\n    const { getBlocks } = select(\"core/block-editor\");\n    return {\n      getBlocks,\n    };\n  }),\n  withDispatch((dispatch) => {\n    const { savePost, editPost } = dispatch(\"core/editor\");\n    const { insertBlocks, replaceBlocks } = dispatch(\"core/block-editor\");\n    return {\n      savePost,\n      insertBlocks,\n      replaceBlocks,\n      setNewsletterMeta: (meta) => editPost({ meta }),\n    };\n  }),\n])(LayoutPicker);\n","/**\n * WordPress dependencies\n */\nimport { Modal } from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * Plugin dependencies\n */\nimport LayoutPicker from \"./screens/layout-picker\";\nimport \"./style.scss\";\n\nexport default () => {\n    return (\n        <Modal\n            className=\"rrze-newsletter-modal__frame\"\n            isDismissible={false}\n            overlayClassName=\"rrze-newsletter-modal__screen-overlay\"\n            shouldCloseOnClickOutside={false}\n            shouldCloseOnEsc={false}\n            title={__(\"Select a layout for the newsletter\", \"rrze-newsletter\")}\n        >\n            {<LayoutPicker />}\n        </Modal>\n    );\n};\n","/**\n * External dependencies\n */\nimport { isEqual, find } from \"lodash\";\n\n/**\n * WordPress dependencies\n */\nimport { compose } from \"@wordpress/compose\";\nimport { parse, serialize } from \"@wordpress/blocks\";\nimport { __ } from \"@wordpress/i18n\";\nimport { withDispatch, withSelect } from \"@wordpress/data\";\nimport { Fragment, useState, useEffect, useMemo } from \"@wordpress/element\";\nimport { Button, Modal, TextControl, Spinner } from \"@wordpress/components\";\n\n/**\n * Plugin dependencies\n */\nimport { useLayoutsState } from \"../../utils/hooks\";\nimport { LAYOUT_CPT_SLUG, NEWSLETTER_CPT_SLUG } from \"../../utils/consts\";\nimport { isUserDefinedLayout } from \"../../utils\";\nimport \"./style.scss\";\nimport NewsletterPreview from \"../../components/newsletter-preview\";\n\nexport default compose([\n    withSelect((select) => {\n        const {\n            getEditedPostAttribute,\n            isEditedPostEmpty,\n            getCurrentPostId,\n        } = select(\"core/editor\");\n        const { getBlocks } = select(\"core/block-editor\");\n        const meta = getEditedPostAttribute(\"meta\");\n        const {\n            rrze_newsletter_template_id: layoutId,\n            rrze_newsletter_background_color,\n            rrze_newsletter_font_body,\n            rrze_newsletter_font_header,\n        } = meta;\n        return {\n            layoutId,\n            postTitle: getEditedPostAttribute(\"title\"),\n            postBlocks: getBlocks(),\n            isEditedPostEmpty: isEditedPostEmpty(),\n            currentPostId: getCurrentPostId(),\n            stylingMeta: {\n                rrze_newsletter_background_color,\n                rrze_newsletter_font_body,\n                rrze_newsletter_font_header,\n            },\n        };\n    }),\n    withDispatch((dispatch, { currentPostId, stylingMeta }) => {\n        const { replaceBlocks } = dispatch(\"core/block-editor\");\n        const { editPost } = dispatch(\"core/editor\");\n        const { saveEntityRecord } = dispatch(\"core\");\n        return {\n            replaceBlocks,\n            saveLayoutIdMeta: (id) => {\n                editPost({ meta: { rrze_newsletter_template_id: id } });\n                saveEntityRecord(\"postType\", NEWSLETTER_CPT_SLUG, {\n                    id: currentPostId,\n                    meta: { rrze_newsletter_template_id: id, ...stylingMeta },\n                });\n            },\n            saveLayout: (payload) =>\n                saveEntityRecord(\"postType\", LAYOUT_CPT_SLUG, {\n                    status: \"publish\",\n                    ...payload,\n                }),\n        };\n    }),\n])(\n    ({\n        saveLayoutIdMeta,\n        layoutId,\n        replaceBlocks,\n        saveLayout,\n        postBlocks,\n        postTitle,\n        isEditedPostEmpty,\n        stylingMeta,\n    }) => {\n        const [warningModalVisible, setWarningModalVisible] = useState(false);\n        const { layouts, isFetchingLayouts } = useLayoutsState();\n\n        const [usedLayout, setUsedLayout] = useState({});\n\n        useEffect(() => {\n            setUsedLayout(find(layouts, { ID: layoutId }) || {});\n        }, [layouts.length]);\n\n        const blockPreview = useMemo(() => {\n            return usedLayout.post_content\n                ? parse(usedLayout.post_content)\n                : null;\n        }, [usedLayout]);\n\n        const clearPost = () => {\n            const clientIds = postBlocks.map(({ clientId }) => clientId);\n            if (clientIds && clientIds.length) {\n                replaceBlocks(clientIds, []);\n            }\n        };\n\n        const [isSavingLayout, setIsSavingLayout] = useState(false);\n        const [isManageModalVisible, setIsManageModalVisible] = useState(null);\n        const [newLayoutName, setNewLayoutName] = useState(postTitle);\n\n        const handleLayoutUpdate = (updatedLayout) => {\n            setIsSavingLayout(false);\n            // Set this new layout as the newsletter's layout\n            saveLayoutIdMeta(updatedLayout.id);\n\n            // Update the layout preview\n            // The shape of this data is different than the API response for CPT\n            setUsedLayout({\n                ...updatedLayout,\n                post_content: updatedLayout.content.raw,\n                post_title: updatedLayout.title.raw,\n                post_type: LAYOUT_CPT_SLUG,\n            });\n        };\n\n        const postContent = useMemo(() => serialize(postBlocks), [postBlocks]);\n        const isPostContentSameAsLayout =\n            postContent === usedLayout.post_content &&\n            isEqual(usedLayout.meta, stylingMeta);\n\n        const handleSaveAsLayout = () => {\n            setIsSavingLayout(true);\n            const updatePayload = {\n                title: newLayoutName,\n                content: postContent,\n                meta: stylingMeta,\n            };\n            saveLayout(updatePayload).then((newLayout) => {\n                setIsManageModalVisible(false);\n\n                handleLayoutUpdate(newLayout);\n            });\n        };\n\n        const handeLayoutUpdate = () => {\n            if (\n                confirm(\n                    __(\n                        \"Are you sure you want to overwrite this layout?\",\n                        \"rrze-newsletter\"\n                    )\n                )\n            ) {\n                setIsSavingLayout(true);\n                const updatePayload = {\n                    id: usedLayout.ID,\n                    content: postContent,\n                    meta: stylingMeta,\n                };\n                saveLayout(updatePayload).then(handleLayoutUpdate);\n            }\n        };\n\n        const isUsingCustomLayout = isUserDefinedLayout(usedLayout);\n\n        return (\n            <Fragment>\n                {Boolean(layoutId && isFetchingLayouts) && (\n                    <div className=\"rrze-newsletter-layouts__spinner\">\n                        <Spinner />\n                    </div>\n                )}\n                {blockPreview !== null && (\n                    <div className=\"rrze-newsletter-layouts\">\n                        <div className=\"rrze-newsletter-layouts__item\">\n                            <div className=\"rrze-newsletter-layouts__item-preview\">\n                                <NewsletterPreview\n                                    meta={usedLayout.meta}\n                                    blocks={blockPreview}\n                                    viewportWidth={600}\n                                />\n                            </div>\n                            <div className=\"rrze-newsletter-layouts__item-label\">\n                                {usedLayout.post_title}\n                            </div>\n                        </div>\n                    </div>\n                )}\n                <div className=\"rrze-newsletter-buttons-group rrze-newsletter-buttons-group--spaced\">\n                    <Button\n                        isPrimary\n                        disabled={isEditedPostEmpty || isSavingLayout}\n                        onClick={() => setIsManageModalVisible(true)}\n                    >\n                        {__(\"Save new layout\", \"rrze-newsletter\")}\n                    </Button>\n\n                    {isUsingCustomLayout && (\n                        <Button\n                            isSecondary\n                            disabled={\n                                isPostContentSameAsLayout || isSavingLayout\n                            }\n                            onClick={handeLayoutUpdate}\n                        >\n                            {__(\"Update layout\", \"rrze-newsletter\")}\n                        </Button>\n                    )}\n                </div>\n\n                <br />\n\n                <Button\n                    isSecondary\n                    isLink\n                    isDestructive\n                    onClick={() => setWarningModalVisible(true)}\n                >\n                    {__(\"Reset newsletter layout\", \"rrze-newsletter\")}\n                </Button>\n\n                {isManageModalVisible && (\n                    <Modal\n                        className=\"rrze-newsletter__modal\"\n                        title={__(\n                            \"Save newsletter as a layout\",\n                            \"rrze-newsletter\"\n                        )}\n                        onRequestClose={() => setIsManageModalVisible(null)}\n                    >\n                        <TextControl\n                            label={__(\"Title\", \"rrze-newsletter\")}\n                            disabled={isSavingLayout}\n                            value={newLayoutName}\n                            onChange={setNewLayoutName}\n                        />\n                        <Button\n                            isPrimary\n                            disabled={\n                                isSavingLayout || newLayoutName.length === 0\n                            }\n                            onClick={handleSaveAsLayout}\n                        >\n                            {__(\"Save\", \"rrze-newsletter\")}\n                        </Button>\n                        <Button\n                            isSecondary\n                            onClick={() => setIsManageModalVisible(null)}\n                        >\n                            {__(\"Cancel\", \"rrze-newsletter\")}\n                        </Button>\n                    </Modal>\n                )}\n\n                {warningModalVisible && (\n                    <Modal\n                        className=\"rrze-newsletter__modal\"\n                        title={__(\n                            \"Overwrite newsletter content?\",\n                            \"rrze-newsletter\"\n                        )}\n                        onRequestClose={() => setWarningModalVisible(false)}\n                    >\n                        <p>\n                            {__(\n                                \"Changing the newsletter's layout will remove any customizations or edits you have already made.\",\n                                \"rrze-newsletter\"\n                            )}\n                        </p>\n                        <Button\n                            isPrimary\n                            onClick={() => {\n                                clearPost();\n                                saveLayoutIdMeta(-1);\n                                setWarningModalVisible(false);\n                            }}\n                        >\n                            {__(\"Reset layout\", \"rrze-newsletter\")}\n                        </Button>\n                        <Button\n                            isSecondary\n                            onClick={() => setWarningModalVisible(false)}\n                        >\n                            {__(\"Cancel\", \"rrze-newsletter\")}\n                        </Button>\n                    </Modal>\n                )}\n            </Fragment>\n        );\n    }\n);\n","/**\n * Test if a string contains valid email addresses.\n *\n * @param  {string}  string String to test.\n * @return {boolean} True if it contains a valid email string.\n */\nexport const hasValidEmail = (string) => /\\S+@\\S+/.test(string);\n","import generic from \"./generic\";\n\nconst SERVICE_PROVIDERS = {\n  generic,\n};\n\nexport const getServiceProvider = () => {\n  return SERVICE_PROVIDERS[\"generic\"];\n};\n","/**\n * WordPress dependencies\n */\nimport { __ } from \"@wordpress/i18n\";\nimport { Fragment } from \"@wordpress/element\";\n\n/**\n * Validation utility.\n *\n * @param  {Object} object data fetched using getFetchDataConfig\n * @return {string[]} Array of validation messages. If empty, newsletter is valid.\n */\nconst validateNewsletter = ({ status }) => {\n    const messages = [];\n    if (\"sent\" === status || \"sending\" === status) {\n        messages.push(\n            __(\"Newsletter has already been sent.\", \"rrze-newsletter\")\n        );\n    }\n\n    return messages;\n};\n\n/**\n * Get config used to fetch newsletter data.\n * Should return apiFetch utility config:\n * https://www.npmjs.com/package/@wordpress/api-fetch\n *\n * @param {Object} object data to contruct the config.\n * @return {Object} Config fetching.\n */\nconst getFetchDataConfig = ({ postId }) => ({\n    path: `/rrze-newsletter/v1/email/${postId}`,\n});\n\n/**\n * Component to be rendered in the sidebar panel.\n * Has full control over the panel contents rendering,\n * so that it's possible to render e.g. a loader while\n * the data is not yet available.\n *\n * @param {Object} props props\n */\nconst ProviderSidebar = ({\n    /**\n     * ID of the edited newsletter post.\n     */\n    postId,\n    /**\n     * Fetching handler. Receives config for @wordpress/api-fetch as argument.\n     */\n    apiFetch,\n    /**\n     * Function that renders email subject input.\n     */\n    renderSubject,\n    /**\n     * Function that renders from inputs - sender name and email.\n     * Has to receive an object with `handleSenderUpdate` function,\n     * which will receive a `{senderName, senderEmail}` object – so that\n     * the data can be sent to the backend.\n     */\n    renderFrom,\n}) => {\n    const handleSenderUpdate = ({ senderName, senderEmail }) =>\n        apiFetch({\n            path: `/rrze-newsletter/v1/email/${postId}/sender`,\n            data: {\n                rrze_newsletter_from_name: senderName,\n                rrze_newsletter_replyto: senderEmail,\n            },\n            method: \"POST\",\n        });\n\n    return (\n        <Fragment>\n            {renderSubject()}\n            {renderFrom({ handleSenderUpdate })}\n        </Fragment>\n    );\n};\n\n/**\n * A function to render additional info in the pre-send confirmation modal.\n * Can return null if no additional info is to be presented.\n *\n * @param {Object} newsletterData the data returned by getFetchDataConfig handler\n * @return {any} A React component\n */\nconst renderPreSendInfo = (newsletterData = {}) => (\n    <p>\n        {__(\"Sending newsletter to:\", \"rrze-newsletter\")}{\" \"}\n        {newsletterData.listName}\n    </p>\n);\n\nexport default {\n    validateNewsletter,\n    getFetchDataConfig,\n    ProviderSidebar,\n    renderPreSendInfo,\n};\n","/**\n * WordPress dependencies\n */\nimport { __ } from \"@wordpress/i18n\";\nimport apiFetch from \"@wordpress/api-fetch\";\nimport { dispatch, select } from \"@wordpress/data\";\nimport { createHigherOrderComponent } from \"@wordpress/compose\";\nimport { useState } from \"@wordpress/element\";\n\nexport default () =>\n    createHigherOrderComponent(\n        (OriginalComponent) => (props) => {\n            const [inFlight, setInFlight] = useState(false);\n            const [errors, setErrors] = useState({});\n            const {\n                createSuccessNotice,\n                createErrorNotice,\n                removeNotice,\n            } = dispatch(\"core/notices\");\n            const { getNotices } = select(\"core/notices\");\n            const setInFlightForAsync = () => {\n                setInFlight(true);\n            };\n            const successNote = __(\"Newsletter sent on \", \"rrze-newsletter\");\n            const apiFetchWithErrorHandling = (apiRequest) => {\n                setInFlight(true);\n                return new Promise((resolve, reject) => {\n                    apiFetch(apiRequest)\n                        .then((response) => {\n                            const { message } = response;\n                            getNotices().forEach((notice) => {\n                                if (\n                                    \"error\" !== notice.status &&\n                                    (\"success\" !== notice.status ||\n                                        -1 ===\n                                            notice.content.indexOf(successNote))\n                                ) {\n                                    removeNotice(notice.id);\n                                }\n                            });\n                            if (message) {\n                                createSuccessNotice(message);\n                            }\n                            setInFlight(false);\n                            setErrors({});\n                            resolve(response);\n                        })\n                        .catch((error) => {\n                            const { message } = error;\n                            getNotices().forEach((notice) => {\n                                if (\n                                    \"error\" !== notice.status &&\n                                    (\"success\" !== notice.status ||\n                                        -1 ===\n                                            notice.content.indexOf(successNote))\n                                ) {\n                                    removeNotice(notice.id);\n                                }\n                            });\n                            createErrorNotice(message);\n                            setInFlight(false);\n                            setErrors({ [error.code]: true });\n                            reject(error);\n                        });\n                });\n            };\n            return (\n                <OriginalComponent\n                    {...props}\n                    apiFetchWithErrorHandling={apiFetchWithErrorHandling}\n                    errors={errors}\n                    setInFlightForAsync={setInFlightForAsync}\n                    inFlight={inFlight}\n                    successNote={successNote}\n                />\n            );\n        },\n        \"with-api-handler\"\n    );\n","/**\n * WordPress dependencies\n */\nimport { __ } from \"@wordpress/i18n\";\nimport { compose } from \"@wordpress/compose\";\nimport { withSelect, withDispatch } from \"@wordpress/data\";\nimport { Fragment } from \"@wordpress/element\";\nimport { Button, TextControl, TextareaControl } from \"@wordpress/components\";\n\n/**\n * External dependencies\n */\nimport classnames from \"classnames\";\n\n/**\n * Plugin dependencies\n */\nimport { hasValidEmail } from \"../utils\";\nimport { getServiceProvider } from \"../../service-providers\";\nimport withApiHandler from \"../../components/with-api-handler\";\nimport \"./style.scss\";\n\nconst Sidebar = ({\n    inFlight,\n    errors,\n    editPost,\n    title,\n    senderName,\n    senderEmail,\n    replytoEmail,\n    previewText,\n    newsletterData,\n    apiFetchWithErrorHandling,\n    postId,\n}) => {\n    const renderSubject = () => (\n        <TextControl\n            label={__(\"Subject\", \"rrze-newsletter\")}\n            className=\"rrze-newsletter__subject-textcontrol\"\n            value={title}\n            disabled={inFlight}\n            onChange={(value) => editPost({ title: value })}\n        />\n    );\n\n    const senderEmailClasses = classnames(\n        \"rrze-newsletter__email-textcontrol\",\n        errors.rrze_newsletter_unverified_sender_domain &&\n            \"rrze-newsletter__error\"\n    );\n\n    const updateMetaValueInAPI = (data) =>\n        apiFetchWithErrorHandling({\n            data,\n            method: \"POST\",\n            path: `/rrze-newsletter/v1/post-meta/${postId}`,\n        });\n\n    const renderFrom = () => (\n        <Fragment>\n            <strong>{__(\"From\", \"rrze-newsletter\")}</strong>\n            <TextControl\n                label={__(\"Name\", \"rrze-newsletter\")}\n                className=\"rrze-newsletter__name-textcontrol\"\n                value={senderName}\n                disabled={inFlight}\n                onChange={(value) => editPost({ meta: { rrze_newsletter_from_name: value } })}\n            />\n            <TextControl\n                label={__(\"Email\", \"rrze-newsletter\")}\n                className={senderEmailClasses}\n                value={senderEmail}\n                type=\"email\"\n                disabled={inFlight}\n                onChange={(value) => editPost({ meta: { rrze_newsletter_from_email: value } })}\n            />\n            <TextControl\n                label={__(\"ReplyTo\", \"rrze-newsletter\")}\n                className={senderEmailClasses}\n                value={replytoEmail}\n                type=\"email\"\n                disabled={inFlight}\n                onChange={(value) => editPost({ meta: { rrze_newsletter_replyto: value } })}\n            />\n            <Button\n                isLink\n                onClick={() => {\n                    updateMetaValueInAPI({\n                        key: \"rrze_newsletter_from_name\",\n                        value: senderName,\n                    });\n                    updateMetaValueInAPI({\n                        key: \"rrze_newsletter_from_email\",\n                        value: senderEmail,\n                    });\n                    updateMetaValueInAPI({\n                        key: \"rrze_newsletter_replyto\",\n                        value: replytoEmail,\n                    });\n                }}\n                disabled={\n                    inFlight ||\n                    (senderEmail.length\n                        ? !hasValidEmail(senderEmail)\n                        : false) ||\n                    (replytoEmail.length ? !hasValidEmail(replytoEmail) : false)\n                }\n            >\n                {__(\"Update Sender\", \"rrze-newsletter\")}\n            </Button>\n\n            <TextareaControl\n                label={__(\"Preview text\", \"rrze-newsletter\")}\n                className=\"rrze-newsletter__name-textcontrol rrze-newsletter__name-textcontrol--separated\"\n                value={previewText}\n                disabled={inFlight}\n                onChange={(value) =>\n                    editPost({ meta: { rrze_newsletter_preview_text: value } })\n                }\n            />\n            <Button\n                isLink\n                onClick={() =>\n                    updateMetaValueInAPI({\n                        key: \"rrze_newsletter_preview_text\",\n                        value: previewText,\n                    })\n                }\n                disabled={inFlight}\n            >\n                {__(\"Update preview text\", \"rrze-newsletter\")}\n            </Button>\n        </Fragment>\n    );\n\n    const { ProviderSidebar } = getServiceProvider();\n    return (\n        <Fragment>\n            <ProviderSidebar\n                postId={postId}\n                newsletterData={newsletterData}\n                inFlight={inFlight}\n                renderSubject={renderSubject}\n                renderFrom={renderFrom}\n                updateMeta={(meta) => editPost({ meta })}\n            />\n        </Fragment>\n    );\n};\n\nexport default compose([\n    withApiHandler(),\n    withSelect((select) => {\n        const { getEditedPostAttribute, getCurrentPostId } = select(\n            \"core/editor\"\n        );\n        const meta = getEditedPostAttribute(\"meta\");\n        return {\n            title: getEditedPostAttribute(\"title\"),\n            postId: getCurrentPostId(),\n            senderName: meta.rrze_newsletter_from_name || \"\",\n            senderEmail: meta.rrze_newsletter_from_email || \"\",\n            replytoEmail: meta.rrze_newsletter_replyto || \"\",\n            previewText: meta.rrze_newsletter_preview_text || \"\",\n            newsletterData: meta.newsletterData || {},\n        };\n    }),\n    withDispatch((dispatch) => {\n        const { editPost } = dispatch(\"core/editor\");\n        return { editPost };\n    }),\n])(Sidebar);\n","/**\n * WordPress dependencies\n */\nimport { __ } from \"@wordpress/i18n\";\nimport { withSelect, withDispatch } from \"@wordpress/data\";\nimport { compose } from \"@wordpress/compose\";\nimport { Fragment, useState } from \"@wordpress/element\";\nimport { Button, Spinner, TextControl } from \"@wordpress/components\";\nimport { hasValidEmail } from \"../utils\";\n\n/**\n * Plugin dependencies\n */\nimport withApiHandler from \"../../components/with-api-handler\";\nimport \"./style.scss\";\n\nexport default compose([\n    withApiHandler(),\n    withSelect((select) => {\n        const { getCurrentPostId } = select(\"core/editor\");\n        return { postId: getCurrentPostId() };\n    }),\n    withDispatch((dispatch) => {\n        const { savePost } = dispatch(\"core/editor\");\n        return {\n            savePost,\n        };\n    }),\n])(\n    ({\n        apiFetchWithErrorHandling,\n        inFlight,\n        postId,\n        savePost,\n        setInFlightForAsync,\n    }) => {\n        const [testEmail, setTestEmail] = useState(\"\");\n        const sendTestEmail = async () => {\n            setInFlightForAsync();\n            await savePost();\n            const params = {\n                path: `/rrze-newsletter/v1/email/${postId}/test`,\n                data: {\n                    test_email: testEmail,\n                },\n                method: \"POST\",\n            };\n            apiFetchWithErrorHandling(params);\n        };\n        return (\n            <Fragment>\n                <TextControl\n                    label={__(\"Send a test to\", \"rrze-newsletter\")}\n                    value={testEmail}\n                    type=\"email\"\n                    onChange={setTestEmail}\n                    help={__(\n                        \"Use commas to separate multiple emails.\",\n                        \"rrze-newsletter\"\n                    )}\n                />\n                <div className=\"rrze-newsletter__testing-controls\">\n                    <Button\n                        isPrimary\n                        onClick={sendTestEmail}\n                        disabled={inFlight || !hasValidEmail(testEmail)}\n                    >\n                        {inFlight\n                            ? __(\"Sending Test Email...\", \"rrze-newsletter\")\n                            : __(\"Send a Test Email\", \"rrze-newsletter\")}\n                    </Button>\n                    {inFlight && <Spinner />}\n                </div>\n            </Fragment>\n        );\n    }\n);\n","/**\n * External dependencies\n */\nimport { isEmpty } from \"lodash\";\n\n/**\n * WordPress dependencies\n */\nimport { useInstanceId } from \"@wordpress/compose\";\nimport { BaseControl } from \"@wordpress/components\";\n\n/**\n * SelectControl with optgroup support\n */\nexport default function SelectControlWithOptGroup({\n    help,\n    label,\n    multiple = false,\n    onChange,\n    optgroups = [],\n    className,\n    hideLabelFromVision,\n    ...props\n}) {\n    const instanceId = useInstanceId(SelectControlWithOptGroup);\n    const id = `inspector-select-control-${instanceId}`;\n    const onChangeValue = (event) => {\n        if (multiple) {\n            const selectedOptions = [...event.target.options].filter(\n                ({ selected }) => selected\n            );\n            const newValues = selectedOptions.map(({ value }) => value);\n            onChange(newValues);\n            return;\n        }\n        onChange(event.target.value);\n    };\n\n    // Disable reason: A select with an onchange throws a warning\n\n    if (isEmpty(optgroups)) {\n        return null;\n    }\n\n    return (\n        <BaseControl\n            label={label}\n            hideLabelFromVision={hideLabelFromVision}\n            id={id}\n            help={help}\n            className={className}\n        >\n            <select\n                id={id}\n                className=\"components-select-control__input\"\n                onChange={onChangeValue}\n                aria-describedby={!help ? `${id}__help` : undefined}\n                multiple={multiple}\n                {...props}\n            >\n                {optgroups.map(\n                    ({ label: optgroupLabel, options }, optgroupIndex) => (\n                        <optgroup label={optgroupLabel} key={optgroupIndex}>\n                            {options.map((option, optionIndex) => (\n                                <option\n                                    key={`${option.label}-${option.value}-${optionIndex}`}\n                                    value={option.value}\n                                    disabled={option.disabled}\n                                >\n                                    {option.label}\n                                </option>\n                            ))}\n                        </optgroup>\n                    )\n                )}\n            </select>\n        </BaseControl>\n    );\n}\n","/**\n * WordPress dependencies\n */\nimport apiFetch from \"@wordpress/api-fetch\";\nimport { compose, useInstanceId } from \"@wordpress/compose\";\nimport { ColorPicker, BaseControl } from \"@wordpress/components\";\nimport { __ } from \"@wordpress/i18n\";\nimport { withDispatch, withSelect } from \"@wordpress/data\";\nimport { Fragment, useEffect } from \"@wordpress/element\";\nimport SelectControlWithOptGroup from \"../../components/select-control-with-optgroup/\";\n\nconst fontOptgroups = [\n    {\n        label: __(\"Sans Serif\", \"rrze-newsletter\"),\n        options: [\n            {\n                value: \"Arial, Helvetica, sans-serif\",\n                label: __(\"Arial\", \"rrze-newsletter\"),\n            },\n            {\n                value: \"Tahoma, sans-serif\",\n                label: __(\"Tahoma\", \"rrze-newsletter\"),\n            },\n            {\n                value: \"Trebuchet MS, sans-serif\",\n                label: __(\"Trebuchet\", \"rrze-newsletter\"),\n            },\n            {\n                value: \"Verdana, sans-serif\",\n                label: __(\"Verdana\", \"rrze-newsletter\"),\n            },\n        ],\n    },\n\n    {\n        label: __(\"Serif\", \"rrze-newsletter\"),\n        options: [\n            {\n                value: \"Georgia, serif\",\n                label: __(\"Georgia\", \"rrze-newsletter\"),\n            },\n            {\n                value: \"Palatino, serif\",\n                label: __(\"Palatino\", \"rrze-newsletter\"),\n            },\n            {\n                value: \"Times New Roman, serif\",\n                label: __(\"Times New Roman\", \"rrze-newsletter\"),\n            },\n        ],\n    },\n\n    {\n        label: __(\"Monospace\", \"rrze-newsletter\"),\n        options: [\n            {\n                value: \"Courier, monospace\",\n                label: __(\"Courier\", \"rrze-newsletter\"),\n            },\n        ],\n    },\n];\n\nconst customStylesSelector = (select) => {\n    const { getEditedPostAttribute } = select(\"core/editor\");\n    const meta = getEditedPostAttribute(\"meta\");\n    return {\n        fontBody: meta.rrze_newsletter_font_body || fontOptgroups[1].options[0].value,\n        fontHeader: meta.rrze_newsletter_font_header || fontOptgroups[0].options[0].value,\n        backgroundColor: meta.rrze_newsletter_background_color || \"#ffffff\",\n    };\n};\n\nexport const ApplyStyling = withSelect(customStylesSelector)(\n    ({ fontBody, fontHeader, backgroundColor }) => {\n        useEffect(() => {\n            document.documentElement.style.setProperty(\"--body-font\", fontBody);\n        }, [fontBody]);\n        useEffect(() => {\n            document.documentElement.style.setProperty(\n                \"--header-font\",\n                fontHeader\n            );\n        }, [fontHeader]);\n        useEffect(() => {\n            const editorElement = document.querySelector(\n                \".edit-post-visual-editor\"\n            );\n            if (editorElement) {\n                editorElement.style.backgroundColor = backgroundColor;\n            }\n        }, [backgroundColor]);\n\n        return null;\n    }\n);\n\nexport const Styling = compose([\n    withDispatch((dispatch) => {\n        const { editPost } = dispatch(\"core/editor\");\n        return { editPost };\n    }),\n    withSelect((select) => {\n        const { getCurrentPostId } = select(\"core/editor\");\n        return {\n            postId: getCurrentPostId(),\n            ...customStylesSelector(select),\n        };\n    }),\n])(({ editPost, fontBody, fontHeader, backgroundColor, postId }) => {\n    const updateStyleValue = (key, value) => {\n        editPost({ meta: { [key]: value } });\n        apiFetch({\n            data: { key, value },\n            method: \"POST\",\n            path: `/rrze-newsletter/v1/post-meta/${postId}`,\n        });\n    };\n\n    const instanceId = useInstanceId(SelectControlWithOptGroup);\n    const id = `inspector-select-control-${instanceId}`;\n\n    return (\n        <Fragment>\n            <SelectControlWithOptGroup\n                label={__(\"Headings font\", \"rrze-newsletter\")}\n                value={fontHeader}\n                optgroups={fontOptgroups}\n                onChange={(value) => updateStyleValue(\"rrze_newsletter_font_header\", value)}\n            />\n            <SelectControlWithOptGroup\n                label={__(\"Body font\", \"rrze-newsletter\")}\n                value={fontBody}\n                optgroups={fontOptgroups}\n                onChange={(value) => updateStyleValue(\"rrze_newsletter_font_body\", value)}\n            />\n            <BaseControl\n                label={__(\"Background color\", \"rrze-newsletter\")}\n                id={id}\n            >\n                <ColorPicker\n                    id={id}\n                    color={backgroundColor}\n                    onChangeComplete={(value) =>\n                        updateStyleValue(\"rrze_newsletter_background_color\", value.hex)\n                    }\n                    disableAlpha\n                />\n            </BaseControl>\n        </Fragment>\n    );\n});\n","/**\n * WordPress dependencies\n */\nimport { __ } from \"@wordpress/i18n\";\nimport { ToggleControl } from \"@wordpress/components\";\nimport { compose } from \"@wordpress/compose\";\nimport { withDispatch, withSelect } from \"@wordpress/data\";\nimport { Fragment } from \"@wordpress/element\";\n\n/**\n * Plugin dependencies\n */\nimport \"./style.scss\";\n\nconst PublicSettingsComponent = (props) => {\n    const { meta, updateIsPublic } = props;\n    const { rrze_newsletter_is_public } = meta;\n\n    return (\n        <Fragment>\n            <ToggleControl\n                className=\"rrze-newsletter__public-toggle-control\"\n                label={__(\"Make newsletter page public?\", \"rrze-newsletter\")}\n                help={__(\n                    \"Make this newsletter viewable as a public page once it’s been sent.\", \"rrze-newsletter\"\n                )}\n                checked={rrze_newsletter_is_public}\n                onChange={(value) => updateIsPublic(value)}\n            />\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = (select) => {\n    const { getEditedPostAttribute } = select(\"core/editor\");\n\n    return {\n        meta: getEditedPostAttribute(\"meta\"),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    const { editPost } = dispatch(\"core/editor\");\n\n    return {\n        updateIsPublic: (value) => editPost({ meta: { rrze_newsletter_is_public: value } }),\n    };\n};\n\nexport const PublicSettings = compose([\n    withSelect(mapStateToProps),\n    withDispatch(mapDispatchToProps),\n])(PublicSettingsComponent);\n","/**\n * WordPress dependencies\n */\nimport { withDispatch, withSelect } from \"@wordpress/data\";\nimport { compose } from \"@wordpress/compose\";\nimport { Button, Modal, Notice } from \"@wordpress/components\";\nimport { Fragment, useState } from \"@wordpress/element\";\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * External dependencies\n */\nimport { get } from \"lodash\";\n\nimport \"./style.scss\";\n\nexport default compose([\n    withDispatch((dispatch) => {\n        const { editPost, savePost } = dispatch(\"core/editor\");\n        return { editPost, savePost };\n    }),\n    withSelect((select, { forceIsDirty }) => {\n        const {\n            getCurrentPost,\n            getEditedPostAttribute,\n            getEditedPostVisibility,\n            isEditedPostPublishable,\n            isEditedPostSaveable,\n            isSavingPost,\n            isEditedPostBeingScheduled,\n            isCurrentPostPublished,\n        } = select(\"core/editor\");\n        return {\n            isPublishable: forceIsDirty || isEditedPostPublishable(),\n            isSaveable: isEditedPostSaveable(),\n            status: getEditedPostAttribute(\"status\"),\n            isSaving: isSavingPost(),\n            isEditedPostBeingScheduled: isEditedPostBeingScheduled(),\n            hasPublishAction: get(\n                getCurrentPost(),\n                [\"_links\", \"wp:action-publish\"],\n                false\n            ),\n            visibility: getEditedPostVisibility(),\n            meta: getEditedPostAttribute(\"meta\"),\n            isPublished: isCurrentPostPublished(),\n        };\n    }),\n])(\n    ({\n        editPost,\n        savePost,\n        isPublishable,\n        isSaveable,\n        isSaving,\n        status,\n        isEditedPostBeingScheduled,\n        hasPublishAction,\n        visibility,\n        meta,\n        isPublished,\n    }) => {\n        const { newsletterValidationErrors = [], rrze_newsletter_is_public } = meta;\n\n        const isButtonEnabled =\n            (isPublishable || isEditedPostBeingScheduled) &&\n            isSaveable &&\n            !isPublished &&\n            !isSaving &&\n            0 === newsletterValidationErrors.length;\n        let label;\n        if (isPublished) {\n            if (isSaving) label = __(\"Sending\", \"rrze-newsletter\");\n            else {\n                label = rrze_newsletter_is_public\n                    ? __(\"Sent and Published\", \"rrze-newsletter\")\n                    : __(\"Sent\", \"rrze-newsletter\");\n            }\n        } else if (\"future\" === status) {\n            // Scheduled to be sent\n            label = __(\"Scheduled\", \"rrze-newsletter\");\n        } else if (isEditedPostBeingScheduled) {\n            label = __(\"Schedule sending\", \"rrze-newsletter\");\n        } else {\n            label = rrze_newsletter_is_public\n                ? __(\"Send and Publish\", \"rrze-newsletter\")\n                : __(\"Send\", \"rrze-newsletter\");\n        }\n\n        let publishStatus;\n        if (!hasPublishAction) {\n            publishStatus = \"pending\";\n        } else if (visibility === \"private\") {\n            publishStatus = \"private\";\n        } else if (isEditedPostBeingScheduled) {\n            publishStatus = \"future\";\n        } else {\n            publishStatus = \"publish\";\n        }\n\n        const triggerNewsletterSend = () => {\n            editPost({ status: publishStatus });\n            savePost();\n        };\n\n        const [modalVisible, setModalVisible] = useState(false);\n\n        // For sent newsletters, display the generic button text.\n        if (isPublished) {\n            return (\n                <Button\n                    className=\"editor-post-publish-button\"\n                    isBusy={isSaving}\n                    isPrimary\n                    disabled={isSaving}\n                    onClick={savePost}\n                >\n                    {isSaving\n                        ? __(\"Updating...\", \"rrze-newsletter\")\n                        : __(\"Update\", \"rrze-newsletter\")}\n                </Button>\n            );\n        }\n\n        return (\n            <Fragment>\n                <Button\n                    className=\"editor-post-publish-button\"\n                    isBusy={isSaving && \"publish\" === status}\n                    isPrimary\n                    onClick={async () => {\n                        await savePost();\n                        setModalVisible(true);\n                    }}\n                    disabled={!isButtonEnabled}\n                >\n                    {label}\n                </Button>\n                {modalVisible && (\n                    <Modal\n                        className=\"rrze-newsletter__modal\"\n                        title={__(\"Send your newsletter?\", \"rrze-newsletter\")}\n                        onRequestClose={() => setModalVisible(false)}\n                    >\n                        {newsletterValidationErrors.length ? (\n                            <Notice status=\"error\" isDismissible={false}>\n                                {__(\n                                    \"The following errors prevent the newsletter from being sent:\",\n                                    \"rrze-newsletter\"\n                                )}\n                                <ul>\n                                    {newsletterValidationErrors.map(\n                                        (error, i) => (\n                                            <li key={i}>{error}</li>\n                                        )\n                                    )}\n                                </ul>\n                            </Notice>\n                        ) : null}\n                        <Button\n                            isPrimary\n                            disabled={newsletterValidationErrors.length > 0}\n                            onClick={() => {\n                                triggerNewsletterSend();\n                                setModalVisible(false);\n                            }}\n                        >\n                            {__(\"Send\", \"rrze-newsletter\")}\n                        </Button>\n                        <Button\n                            isSecondary\n                            onClick={() => setModalVisible(false)}\n                        >\n                            {__(\"Cancel\", \"rrze-newsletter\")}\n                        </Button>\n                    </Modal>\n                )}\n            </Fragment>\n        );\n    }\n);\n","/**\n * External dependencies\n */\nimport { isEmpty } from \"lodash\";\n\n/**\n * WordPress dependencies\n */\nimport { compose } from \"@wordpress/compose\";\nimport { withDispatch, withSelect } from \"@wordpress/data\";\nimport { createPortal, useEffect, useState } from \"@wordpress/element\";\nimport { registerPlugin } from \"@wordpress/plugins\";\n\n/**\n * Plugin dependencies\n */\nimport withApiHandler from \"../../components/with-api-handler\";\nimport SendButton from \"../../components/send-button\";\nimport \"./style.scss\";\n\nconst Editor = compose([\n    withApiHandler(),\n    withSelect((select) => {\n        const {\n            getCurrentPostId,\n            getCurrentPostAttribute,\n            getEditedPostAttribute,\n            isPublishingPost,\n            isSavingPost,\n            isCleanNewPost,\n        } = select(\"core/editor\");\n        const { getActiveGeneralSidebarName } = select(\"core/edit-post\");\n        const meta = getEditedPostAttribute(\"meta\");\n        const status = getCurrentPostAttribute(\"status\");\n        const sentDate = getCurrentPostAttribute(\"date\");\n\n        return {\n            isCleanNewPost: isCleanNewPost(),\n            postId: getCurrentPostId(),\n            isReady: meta.newsletterValidationErrors\n                ? meta.newsletterValidationErrors.length === 0\n                : false,\n            activeSidebarName: getActiveGeneralSidebarName(),\n            isPublishingOrSavingPost: isSavingPost() || isPublishingPost(),\n            status,\n            sentDate,\n            isPublic: meta.rrze_newsletter_is_public,\n        };\n    }),\n    withDispatch((dispatch) => {\n        const {\n            lockPostAutosaving,\n            lockPostSaving,\n            unlockPostSaving,\n            editPost,\n        } = dispatch(\"core/editor\");\n        const { createNotice } = dispatch(\"core/notices\");\n        return {\n            lockPostAutosaving,\n            lockPostSaving,\n            unlockPostSaving,\n            editPost,\n            createNotice,\n        };\n    }),\n])((props) => {\n    const [publishEl] = useState(document.createElement(\"div\"));\n    // Create alternate publish button\n    useEffect(() => {\n        const publishButton = document.getElementsByClassName(\n            \"editor-post-publish-button__button\"\n        )[0];\n        publishButton.parentNode.insertBefore(publishEl, publishButton);\n    }, []);\n\n    // Set color palette option.\n    useEffect(() => {\n        if (isEmpty(props.colorPalette)) {\n            return;\n        }\n        props.apiFetchWithErrorHandling({\n            path: `/rrze-newsletter/v1/color-palette`,\n            data: props.colorPalette,\n            method: \"POST\",\n        });\n    }, [JSON.stringify(props.colorPalette)]);\n\n    // Lock or unlock post publishing.\n    useEffect(() => {\n        if (props.isReady) {\n            props.unlockPostSaving(\"rrze-newsletter-post-lock\");\n        } else {\n            props.lockPostSaving(\"rrze-newsletter-post-lock\");\n        }\n    }, [props.isReady]);\n\n    useEffect(() => {\n        if (\"publish\" === props.status && !props.isPublishingOrSavingPost) {\n            const dateTime = props.sentDate\n                ? new Date(props.sentDate).toLocaleString()\n                : \"\";\n\n            // Lock autosaving after a newsletter is sent.\n            props.lockPostAutosaving();\n\n            // Show an editor notice if the newsletter has been sent.\n            props.createNotice(\"success\", props.successNote + dateTime, {\n                isDismissible: false,\n            });\n        }\n    }, [props.status]);\n\n    useEffect(() => {\n        // Hide post title if the newsletter is a not a public post.\n        const editorTitleEl = document.querySelector(\".editor-post-title\");\n        if (editorTitleEl) {\n            editorTitleEl.classList[props.isPublic ? \"remove\" : \"add\"](\n                \"rrze-newsletter-post-title-hidden\"\n            );\n        }\n    }, [props.isPublic]);\n\n    return createPortal(<SendButton />, publishEl);\n});\n\nexport default () => {\n    registerPlugin(\"rrze-newsletter-edit\", {\n        render: Editor,\n    });\n};\n","/**\n * WordPress dependencies\n */\nimport { __ } from \"@wordpress/i18n\";\nimport { withSelect } from \"@wordpress/data\";\nimport { compose } from \"@wordpress/compose\";\nimport { Fragment, useState } from \"@wordpress/element\";\nimport { PluginDocumentSettingPanel } from \"@wordpress/edit-post\";\nimport { registerPlugin } from \"@wordpress/plugins\";\n\n/**\n * Plugin dependencies\n */\nimport InitModal from \"../components/init-modal\";\nimport Layout from \"./layout/\";\nimport Sidebar from \"./sidebar/\";\nimport Testing from \"./testing/\";\nimport { Styling, ApplyStyling } from \"./styling/\";\nimport { PublicSettings } from \"./public\";\nimport registerEditorPlugin from \"./editor/\";\n\nregisterEditorPlugin();\n\nconst NewsletterEdit = ({ layoutId }) => {\n    const [shouldDisplaySettings, setShouldDisplaySettings] = useState(\n        window &&\n            window.rrze_newsletter_data &&\n            window.rrze_newsletter_data.is_service_provider_configured !== \"1\"\n    );\n\n    const isDisplayingInitModal = shouldDisplaySettings || -1 === layoutId;\n\n    return isDisplayingInitModal ? (\n        <InitModal\n            shouldDisplaySettings={shouldDisplaySettings}\n            onSetupStatus={setShouldDisplaySettings}\n        />\n    ) : (\n        <Fragment>\n            <PluginDocumentSettingPanel\n                name=\"newsletters-settings-panel\"\n                title={__(\"Newsletter\", \"rrze-newsletter\")}\n            >\n                <Sidebar />\n                <PublicSettings />\n            </PluginDocumentSettingPanel>\n            <PluginDocumentSettingPanel\n                name=\"newsletters-styling-panel\"\n                title={__(\"Styling\", \"rrze-newsletter\")}\n            >\n                <Styling />\n            </PluginDocumentSettingPanel>\n            <PluginDocumentSettingPanel\n                name=\"newsletters-testing-panel\"\n                title={__(\"Testing\", \"rrze-newsletter\")}\n            >\n                <Testing />\n            </PluginDocumentSettingPanel>\n            <PluginDocumentSettingPanel\n                name=\"newsletters-layout-panel\"\n                title={__(\"Layout\", \"rrze-newsletter\")}\n            >\n                <Layout />\n            </PluginDocumentSettingPanel>\n\n            <ApplyStyling />\n        </Fragment>\n    );\n};\n\nconst NewsletterEditWithSelect = compose([\n    withSelect((select) => {\n        const { getEditedPostAttribute } = select(\"core/editor\");\n        const meta = getEditedPostAttribute(\"meta\");\n        return { layoutId: meta.rrze_newsletter_template_id };\n    }),\n])(NewsletterEdit);\n\nregisterPlugin(\"rrze-newsletter-sidebar\", {\n    render: NewsletterEditWithSelect,\n    icon: null,\n});\n","/**\n * WordPress dependencies\n */\nimport { unregisterBlockStyle } from \"@wordpress/blocks\";\nimport domReady from \"@wordpress/dom-ready\";\nimport { addFilter } from \"@wordpress/hooks\";\nimport { registerPlugin } from \"@wordpress/plugins\";\n\n/**\n * Plugin dependencies\n */\nimport \"./style.scss\";\nimport { addBlocksValidationFilter } from \"./blocks-validation/blocks-filters\";\nimport { NestedColumnsDetection } from \"./blocks-validation/nesting-detection\";\nimport \"../newsletter-editor\";\n\naddBlocksValidationFilter();\n\n/* Unregister core block styles that are unsupported in emails */\ndomReady(() => {\n    unregisterBlockStyle(\"core/separator\", \"dots\");\n    unregisterBlockStyle(\"core/social-links\", \"logos-only\");\n    unregisterBlockStyle(\"core/social-links\", \"pill-shape\");\n});\n\naddFilter(\n    \"blocks.registerBlockType\",\n    \"rrze-newsletter/core-blocks\",\n    (settings, name) => {\n        /* Remove left/right alignment options wherever possible */\n        if (\n            \"core/paragraph\" === name ||\n            \"core/buttons\" === name ||\n            \"core/columns\" === name\n        ) {\n            settings.supports = { ...settings.supports, align: [] };\n        }\n        if (\"core/group\" === name) {\n            settings.supports = { ...settings.supports, align: [\"full\"] };\n        }\n        return settings;\n    }\n);\n\nregisterPlugin(\"rrze-newsletter-plugin\", {\n    render: NestedColumnsDetection,\n    icon: null,\n});\n"],"sourceRoot":""}